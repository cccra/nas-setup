# Do not edit this file directly
# Instead, add your customizations to group_vars/your-inventory-name/vars.yml
# For secret variables, use group_vars/your-inventory-name/vault.yml

# Networks

# the ip address range for your home network
lan_network: "192.168.1.0/24"

# The ip address of your server (just put the last part of the ip at the end)
lan_address: "{{ '.'.join(lan_network.split('.')[0:3]) }}.136"

# The ip for adguard, used internally for dns resolution
adguard_address: "11.0.0.2"

# Miscellaneous settings
hostname: "{{ inventory_hostname }}"

timezone: Europe/London

ntp_timezone: "{{ timezone }}"

locale: en_US.UTF-8

dns_nameservers: ["{{ adguard_address }}", "1.1.1.1", "1.0.0.1"]

keyboard_layout: uk

username: gus

guid: "1000"

shell: /usr/bin/zsh

docker_dir: /opt/docker/data

dotfiles_repo: https://gitlab.com/cccra/dotfiles.git

boot_drive_serial: ""

spindown_time: 600 # in seconds

# Packages
extra_packages:
  - mediainfo
  - fd-find
  - fzf
  - zsh
  - iperf3
  - speedtest-cli
  - htop
  - stow
  - git
  - neofetch
  - tmux
  - rsync
  - lm-sensors
  - iotop
  - ncdu
  - rar
  - p7zip
  - p7zip-full

# Apt mirrors
version: jammy

apt_mirror: http://ubuntu.mirrors.uk2.net/ubuntu

# Email credentials (for SMART and Snapraid error reporting)

email: you@example.com
email_login: "{{ email }}"
email_smtp_host: smtp.mailbox.org
email_smtp_port: 465
email_smtp_port_startls: 587

# MSMTP
msmtp_accounts:
    - account: mailbox
      host: "{{ email_smtp_host }}"
      port: "{{ email_smtp_port_startls }}"
      auth: "on"
      from: "{{ email }}"
      user: "{{ email }}"
      password: "{{ email_password }}"

msmtp_default_account: "mailbox"
msmtp_alias_default: "{{ email }}"

# SSH (geerlingguy.security)
security_ssh_port: 70
security_sudoers_passwordless: ["{{ username }}"]
security_autoupdate_reboot: true
security_autoupdate_mail_to: "{{ email }}"
security_autoupdate_reboot_time: "23:00"
security_autoupdate_mail_on_error: false

# Enable/disable functionality
enable_nas_stuff: false

# Containers

enable_jellyfin: false
enable_wizarr: false
enable_navidrome: false
enable_jellyseerr: false
enable_photoprism: false
enable_immich: false
enable_qbittorrent: false
enable_sonarr: false
enable_radarr: false
enable_lidarr: false
enable_prowlarr: false
enable_flaresolverr: false
enable_unpackerr: false
enable_bazarr: false
enable_gitea: false
enable_grocy: false
enable_linkwarden: false
enable_invoiceninja: false
enable_paperless: false
enable_nextcloud: false
enable_vaultwarden: false
enable_gramps: false
enable_homarr: false
enable_adguard: false
enable_watchtower: false
enable_cloudflare_ddns: false
enable_nginxproxymanager: false

# Security
enable_crowdsec: false
enable_iptables: false
enable_fail2ban: false
security_fail2ban_enabled: false

# Powersaving (powertop, cpufreq)
enable_powersaving: false

# Samba
samba_server_string: "{{ hostname }}"

samba_users:
    - name: "{{ username }}"
      password: "{{ password }}"

samba_global_include: global-include.conf
samba_apple_extensions: yes
samba_mitigate_cve_2017_7494: false
samba_server_max_protocol: "SMB3"
samba_server_min_protocol: "SMB3"

samba_shares:
    - name: Trash
      guest_ok: no
      public: no
      read_only: no
      writable: yes
      owner: "{{ username }}"
      browseable: yes
      path: "{{ mergerfs_root }}"
      valid_users: "{{ username }}"
      write_list: "{{ username }}"

    - name: Downloads
      guest_ok: no
      public: no
      read_only: no
      writable: yes
      browseable: yes
      owner: "{{ username }}"
      path: "{{ mergerfs_root }}/Downloads"
      valid_users: "{{ username }}"
      write_list: "{{ username }}"

    - name: Media
      guest_ok: no
      public: no
      read_only: no
      writable: yes
      browseable: yes
      owner: "{{ username }}"
      path: "{{ mergerfs_root }}/Media"
      valid_users: "{{ username }}"
      write_list: "{{ username }}"

# Snapraid and MergerFS
mergerfs_root: /mnt/storage

cache_root: /mnt/storage_cache

enable_mergerfs: false

disks:
    - { path: /mnt/data1, src: /dev/disk/by-label/Data1, content: true }
    - { path: /mnt/data2, src: /dev/disk/by-label/Data2, content: true }
    - { path: /mnt/data3, src: /dev/disk/by-label/Data3, content: true }

cache_disks:
    - { path: /mnt/cache1, src: /dev/disk/by-label/Cache1, content: true }
    - { path: /mnt/cache2, src: /dev/disk/by-label/Cache2, content: true }

parity_disks:
    - { path: /mnt/parity1, src: /dev/disk/by-label/Parity1, content: true }

snapraid_data_disks: "{{ disks }}"
snapraid_parity_disks: "{{ parity_disks }}"
snapraid_bin_path: /usr/bin/snapraid
snapraid_runner_email_pass: "{{ email_password }}"
snapraid_runner_email_address: "{{ email }}"
snapraid_runner_email_address_from: "{{ snapraid_runner_email_address }}"
snapraid_runner_email_address_to: "{{ snapraid_runner_email_address }}"
snapraid_runner_smtp_host: "{{ email_smtp_host }}"
snapraid_runner_smtp_port: "{{ email_smtp_port }}"
snapraid_runner_command: "python3 {{ snapraid_runner_bin }} -c {{ snapraid_runner_conf }}"

# Stop all the docker containers, backup the {{ docker_dir }} to the MergerFS pool, execute the snapraid runner and start the containers back up
# Stopping the containers is necessary â€“ backing up the data folder with the containers running will result in corrputed database files and no files can be changed during the Snapraid sync
snapraid_runner_cron_jobs:
  - {
      job: "docker stop $(docker ps -q); rsync -avz --delete --exclude cache {{ docker_dir }}/ {{ mergerfs_root }}/docker_data; docker start $(docker ps -a -q) && {{ snapraid_runner_command }} ",
      name: "snapraid_runner",
      weekday: "0",
      hour: "3",
    }

snapraid_runner_delete_threshold: 999999
snapraid_runner_email_sendon: "error"
snapraid_runner_use_ssl: true
snapraid_content_files:
    - /var/snapraid.content

snapraid_config_excludes:
    - "*.unrecoverable"
    - /lost+found/
    - "*.!sync"
    - /tmp/
    - "/Downloads/*"

# SMART error reporting
smartd_default_mail_recipients: ["{{ email }}"]
